"""
Django settings for dsktool project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from django.conf import settings
#import config
import dj_database_url


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '9c7cq(30-^yen1j$lt$mdz@_fwudv0^ifv_@ys)abb0f6-0jt('

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

try:
    from config import adict
    print("\nSETTINGS.py: using config.py...")
    
    SECRET_KEY = adict['django_secret_key'].strip("'")
    print(f"\nSETTINGS.py: config: SECRET_KEY: [ {SECRET_KEY} ]")
    
    ALLOWED_HOSTS = adict['django_allowed_hosts'].split(" ")
    print(f"\nSETTINGS.py: env vars: ALLOWED_HOSTS: [ {ALLOWED_HOSTS} ]")
    
    DEBUG = adict['django_debug']
    print(f"\nSETTINGS.py: env vars: django_debug: [ {DEBUG} ]")

except ImportError: #no config file...load from env
    print("\nSETTINGS.py: config.py not available using env vars ...")
    print("DJANGO_ALLOWED_HOSTS: ", os.environ["DJANGO_ALLOWED_HOSTS"].split(" "))
    print("DJANGO_DEBUG: ", os.environ["DJANGO_DEBUG"])
    print("DJANGO_SECRET_KEY: ", os.environ["DJANGO_SECRET_KEY"].strip("'"))
    
    print("\nSETTINGS.py: setting DJANGO_ALLOWED_HOSTS ...")
    ALLOWED_HOSTS=os.environ["DJANGO_ALLOWED_HOSTS"].split(" ")
    #print(f"\nSETTINGS.py: env vars: ALLOWED_HOSTS: [ {ALLOWED_HOSTS} ]")
    
    print("\nSETTINGS.py: setting DJANGO_DEBUG ...")
    DEBUG = os.environ["DJANGO_DEBUG"]
    #print(f"\nSETTINGS.py: env vars: DJANGO_DEBUG: [ {DEBUG} ]")

    print("\nSETTINGS.py: setting SECRET_KEY ...")
    SECRET_KEY = os.environ["DJANGO_SECRET_KEY"].strip("'")
    #print(f"\nSETTINGS.py: env vars: SECRET_KEY: [ {SECRET_KEY} ]")

settings.configure(
    DEBUG=DEBUG,
    SECRET_KEY=SECRET_KEY,
    ALLOWED_HOSTS=ALLOWED_HOSTS,
)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'dsktool',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'dsktool.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dsktool.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
if 'DYNO' in os.environ:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'dsktool',
            'USER': 'name',
            'PASSWORD': '',
            'HOST': 'localhost',
            'PORT': '',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = 'static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'staticfiles'),
)


db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

